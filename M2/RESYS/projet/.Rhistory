g = read_graph("/home/alex/Documents/M2/RESYS/projet/data/norm_preProcessed_32nodes.txt")
g = read_graph("/home/alex/Documents/M2/RESYS/projet/data/norm_preProcessed_32nodes.txt")
library(igraph)
g = read_graph("/home/alex/Documents/M2/RESYS/projet/data/norm_preProcessed_32nodes.txt")
g = as.undirected(g)
data = read.table("/home/alex/Documents/M2/RESYS/projet/data/norm_preProcessed_32nodes.txt")
View(data)
g = graph_from_data_frame(data, directed = F)
g.plot()
plot(g)
g = graph_from_data_frame(data, directed = F)
library(igraph)
data = read.table("/home/alex/Documents/M2/RESYS/projet/data/norm_preProcessed_32nodes.txt")
g = graph_from_data_frame(data, directed = F)
plot(g)
data = read.table("/home/alex/Documents/M2/RESYS/projet/data/norm_preProcessed_32nodes.txt", header = T)
library(igraph)
data = read.table("/home/alex/Documents/M2/RESYS/projet/data/norm_preProcessed_32nodes.txt", header = T)
data = read.table("/home/alex/Documents/RESYS/projet/data/norm_preProcessed_32nodes.txt", header = T)
g = graph_from_data_frame(data, directed = F)
plot(g)
rm(list = ls()) #clear environment
update.packages()
library(igraph)
library(Matrix)
library(ggplot2)
#library(minet) # Mutual Information NETworks
library(bnlearn) # Bayesian network learning : contains efficient implementations of several algorithms
library(GENIE3) # GEne Network Inference with Ensemble of trees
library(Rgraphviz)
library(miic) # Learning Causal or Non-Causal Graphical Models Using Information Theory
nbCores = 2
#reconstruct graph from expression data
data = read.table("/home/alex/Documents/RESYS/projet/data/norm_preProcessed_32nodes.txt", header = T)
#score based
hc_res = bnlearn::hc(data)
miic_res = miic(data, nThreads=nbCores)
miic_res5 = miic_res
save.image("/home/alex/Documents/RESYS/projet/miic_graphe5.Rdata")
